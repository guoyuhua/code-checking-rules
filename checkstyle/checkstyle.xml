<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
		"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
		"https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="com.puppycrawl.tools.checkstyle.Checker">
	<module name="com.puppycrawl.tools.checkstyle.TreeWalker">
		<module name="com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.UpperEllCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck">
			<property name="allowSamelineSingleParameterlessAnnotation" value="false" />
		</module>
		<module name="com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck">
			<property name="option" value="text" />
		</module>
		<module name="com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck">
			<property name="option" value="alone" />
		</module>
		<module name="com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheck">
			<property name="max" value="3" />
		</module>
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck">
			<property name="max" value="3" />
		</module>
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck">
			<property name="max" value="3" />
		</module>
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck" />
		<!-- 
		<module name="com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck">
			<property name="excludes"
				value="org.assertj.core.api.Assertions.*, org.junit.Assert.*, org.junit.Assume.*, org.junit.internal.matchers.ThrowableMessageMatcher.*, org.hamcrest.CoreMatchers.*, org.hamcrest.Matchers.*, org.springframework.boot.configurationprocessor.ConfigurationMetadataMatchers.*, org.springframework.boot.configurationprocessor.TestCompiler.*, org.springframework.boot.test.autoconfigure.AutoConfigurationImportedCondition.*, org.mockito.Mockito.*, org.mockito.BDDMockito.*, org.mockito.Matchers.*, org.mockito.ArgumentMatchers.*, org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.*, org.springframework.restdocs.hypermedia.HypermediaDocumentation.*, org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*, org.springframework.test.web.servlet.result.MockMvcResultMatchers.*, org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestBuilders.*, org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.*, org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*, org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo, org.springframework.test.web.client.match.MockRestRequestMatchers.*, org.springframework.test.web.client.response.MockRestResponseCreators.*, org.springframework.web.reactive.function.server.RequestPredicates.*, org.springframework.web.reactive.function.server.RouterFunctions.*, org.springframework.test.web.servlet.setup.MockMvcBuilders.*" />
		</module>
		-->
		<module name="com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck">
			<property name="processJavadoc" value="true" />
		</module>
		<module name="com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck">
			<property name="tokens" value="BLOCK_COMMENT_BEGIN" />
		</module>
		<module name="com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck" />

		<module name="com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck">
			<property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS, ARRAY_DECLARATOR" />
		</module>
		<module name="com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck" />
		<module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
			<property name="format" value="^\t* +\t*\S" />
			<property name="message" value="Line has leading space characters; indentation should be performed with tabs only." />
			<property name="ignoreComments" value="true" />
		</module>
		<module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
			<property name="maximum" value="0" />
			<property name="format" value="org\.mockito\.Mockito\.(when|doThrow|doAnswer)" />
			<property name="message" value="Please use BDDMockito imports." />
			<property name="ignoreComments" value="true" />
		</module>
		<module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
			<property name="maximum" value="0" />
			<property name="format" value="org\.junit\.Assert\.assert" />
			<property name="message" value="Please use AssertJ imports." />
			<property name="ignoreComments" value="true" />
		</module>
		<module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck">
			<property name="format" value="[ \t]+$" />
			<property name="illegalPattern" value="true" />
			<property name="message" value="Trailing whitespace" />
		</module>
		<module name="SuppressionCommentFilter">
    			<property name="offCommentFormat" value="CSOFF\: ([\w\|]+)"/>
    			<property name="onCommentFormat" value="CSON\: ([\w\|]+)"/>
    			<property name="checkFormat" value="$1"/>
		</module>
		<module name="SuppressionCommentFilter">
    			<property name="offCommentFormat" value="CS:OFF"/>
    			<property name="onCommentFormat" value="CS:ON"/>
		</module>
	</module>
	<module name="SuppressionFilter">
  		<property name="file" value="http://39.96.52.94/coding/checkstyle-suppressions.xml"/>
  		<property name="optional" value="false"/>
	</module>
</module>
